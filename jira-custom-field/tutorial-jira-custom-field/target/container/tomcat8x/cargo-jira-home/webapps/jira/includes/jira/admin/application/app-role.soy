{namespace JIRA.Templates.Admin.ApplicationAccess}

/**
 */
{template .loading}
<span class="application-role-load icon loading"></span>
{/template}

/**
 */
{template .roleEditorEmpty}
<div id="application-role-initial-load" class="icon loading"></div>
{/template}

/**
 */
{template .roleEditorTableEmpty}
<td class="application-role-empty" colspan="3">{getText('application.access.configuration.no.groups')}</td>
{/template}

/**
 */
{template .noRoles}
{call aui.message.info}
    {param id: 'application-role-none' /}
    {param closeable : false /}
    {param content}
        {getText('application.access.configuration.no.roles')}
    {/param}
{/call}
{/template}

/**
 * @param key
 */
{template .roleEditor}
<form data-role="{$key}" class="aui application-role-editor-form" action="#" class="ajs-dirty-warning-exempt">
    <div class="application-role-editor-container"></div>
    <div class="application-role-selector-container"></div>
</form>
{/template}

/**
 * @param id
 */
{template .groupSingleSelect}
<select class="ss-group-picker" name="groupname-{$id}" multiple="multiple">
    <option data-placeholder="true">{getText('application.access.configuration.select.group')}&hellip;</option>
</select>
<div class="description">{getText('application.access.configuration.select.group.to.add')}</div>
{/template}

/**
 * @param name
 */
{template .warningNoDefaultGroups private="true"}
    {call aui.message.warning}
        {param closeable : false /}
        {param content}
            <p class="title">{getText('application.access.configuration.no.default.groups.warning.title', $name)}</p>
            {getText('application.access.configuration.no.default.groups.warning.content', $name)}
        {/param}
        {param extraClasses: 'application-role-without-default-group'/}
    {/call}
{/template}

/**
 * @param key key for the role
 * @param name the name of the role.
 * @param defined if the role is installed
 * @param selectedByDefault if the role is marked as default
 * @param remainingSeats how many user seats are available for the role
 * @param numberOfSeats number of seats available in this license
 * @param userCount number of users that are currently using the role
 * @param userCountDescription internationalized custom user name for the role
 * @param hasUnlimitedSeats if the role has unlimited seats
 * @param hasDefaultGroup if the role has at least default group
 * @param upgradeJIRAUrl url to upgrade JIRA page on CAC
 * @param reduceUserCountUrl url to CAC page on reducing user count in JIRA
 * @param dialogId the id of group reuse warning.
 */
{template .roleEditorTable}
<h3>{$name}</h3>
{if $selectedByDefault}
    {sp}
    {call aui.lozenges.lozenge}
        {param text: getText('common.words.default') /}
        {param isSubtle: true /}
        {param extraClasses: 'default-app-lozenge' /}
    {/call}
{/if}
<div class="application-role-count-details {if $remainingSeats == 0}application-role-count-warning{/if}">
    {if $hasUnlimitedSeats}
        {getText('application.access.seats.unlimited')}
    {else}
        <span class="application-role-count-licensed">{$numberOfSeats}</span>
    {/if}
    {sp}{$userCountDescription}{sp}
    (<a href="{contextPath()}/secure/admin/user/UserBrowser.jspa?applicationFilter={$key}">
        <span class="application-role-count-total" data-value="{$userCount}">{getText('application.access.seats.used', $userCount)}</span>
    </a>){sp}
    {call aui.inlineDialog2.trigger}
        {param menu: [ 'id': $dialogId ] /}
        {param showIcon: true /}
        {param iconClasses: 'aui-icon aui-icon-small aui-iconfont-info user-count-details-icon active' /}
    {/call}
    {call aui.inlineDialog2.inlineDialog2}
        {param id}{$dialogId}{/param}
        {param extraClasses: 'user-count-details-dialog' /}
        {param alignment: 'right middle'/}
        {param respondsTo: 'toggle' /}
        {param content}
            <div>
                <p>{getText('application.access.user.count.details')}</p>
                <p>{getText('application.access.user.count.learn.more', '<a href="' + $reduceUserCountUrl + '" target="_blank">', '</a>')|noAutoescape}</p>
            </div>
        {/param}
    {/call}
</div>
<div class="notification-content">
    {if $defined == false}
        {call aui.message.warning}
            {param id: 'application-licensed-not-installed' /}
            {param closeable : false /}
            {param content}
                <p>{getText('application.access.licensed.app.not.installed.warning', '<p class="title">', $name, '</p>')|noAutoescape}</p>
                <ul class="aui-nav-actions-list">
                    <li><a href="{$upgradeJIRAUrl}">{getText('application.access.licensed.app.not.installed.warning.link.more.info')}</a></li>
                    <li><a href="{contextPath()}/plugins/servlet/applications/versions-licenses">{getText('application.access.licensed.app.not.installed.warning.link.install', $name)}</a></li>
                </ul>
            {/param}
        {/call}
    {/if}
    {if $hasDefaultGroup == false}
        {call .warningNoDefaultGroups}
            {param name: $name/}
        {/call}
    {/if}
</div>
<table class="aui application-role-editor-table">
    <thead>
        <th class="application-role-name-col">{getText('application.access.configuration.column.name')}</th>
        <th class="application-role-labels-col"></th>
        <th class="application-role-default-col">{getText('application.access.configuration.column.default')}</th>
        <th class="application-role-actions-col"></th>
    </thead>
    <tbody>
    </tbody>
</table>
{/template}

/**
 * @param name the name of the group.
 * @param? userCount the size of the group.
 * @param roleKey the key of the role.
 * @param roleName the name of the role.
 * @param isDefault true if the group is one of the defaults for the role.
 * @param canRemove true if the group can be removed.
 * @param canToggle true if default group can be toggled.
 * @param defaultGroupWarningId the id of the default group warning dialog
 * @param addGroupWarningId id of the add group warning dialog
 * @param managingGroupsUrl link to the managing groups help
 * @param appsWhereGroupIsDefault apps where group is reused and default
 */
{template .roleEditorRow}
<td>
    <a href="{contextPath()}/secure/admin/user/UserBrowser.jspa?group={$name}">
        <span class="application-role-name-group-name" name="default" aria-controls="{$addGroupWarningId}">{$name}</span>
        {if isNonnull($userCount)}
            {sp}<span class="application-role-name-group-size" data-value="{$userCount}">({getText('application.access.group.size', $userCount)})</span>
        {/if}
    </a>
    {call aui.inlineDialog2.inlineDialog2}
        {param id: $addGroupWarningId /}
        {param extraClasses: 'group-reuse-warning-dialog' /}
        {param alignment: 'right middle'/}
        {param content}
            {if $appsWhereGroupIsDefault.length == 1}
                <p>{getText('application.access.default.added.group.is.default.in.another.application.warning.1', $appsWhereGroupIsDefault[0], $roleName)}</p>
            {elseif $appsWhereGroupIsDefault.length == 2}
                <p>{getText('application.access.default.added.group.is.default.in.another.application.warning.2', $appsWhereGroupIsDefault[0], $appsWhereGroupIsDefault[1], $roleName)}</p>
            {else}
                <p>{getText('application.access.default.added.group.is.default.in.another.application.warning.3', $appsWhereGroupIsDefault[0], $roleName)}</p>
            {/if}
            <a href="{$managingGroupsUrl}">{getText('application.access.default.added.group.is.default.in.another.application.warning.link')}</a>
        {/param}
    {/call}
</td>
<td class="application-labels-name">
    <application-role-labels data-role-key="{$roleKey}" data-group-name="{$name}" />
</td>
<td class="application-role-default">
    <input name="default" aria-controls="{$defaultGroupWarningId}" class="application-role-default-input" type="checkbox"{if $isDefault} checked="checked"{/if} {if not $canToggle} disabled="disabled" title="{getText('application.access.configuration.role.must.have.one.default')}"{/if}>
    {call aui.inlineDialog2.inlineDialog2}
        {param id: $defaultGroupWarningId /}
        {param extraClasses: 'group-reuse-warning-dialog' /}
        {param alignment: 'right middle'/}
        {param respondsTo: 'toggle' /}
        {param content}
            <p>{getText('application.access.default.group.reused.info', $roleName)}</p>
            <a href="{$managingGroupsUrl}">{getText('application.access.default.group.reused.info.link')}</a>
        {/param}
    {/call}
</td>
<td class="application-role-action">
{if $canRemove}
    <a class="application-role-remove" href="#">{getText('application.access.configuration.action.remove')}</a>
{else}
    {if $isDefault}
        <span class="application-role-remove" title="{getText('application.access.configuration.cant.remove.last.default')}">{getText('application.access.configuration.action.remove')}</span>
    {else}
        <span class="application-role-remove" title="{getText('application.access.configuration.cant.remove.last')}">{getText('application.access.configuration.action.remove')}</span>
    {/if}
{/if}
</td>
{/template}

/**
  * Render Application Access actions panel
  */
{template .actions}
    <div class="aui-buttons">
        <a class="aui-button app-role-defaults-show-button">
            {getText('application.access.configuration.defaults.action')}
        </a>
    </div>
{/template}

/**
 * Render the Application Access page.
 * @param helpHtml help text to display in the sidebar on the right
 */
{template .page}
    <html>
    <head>
        <title>{getText('application.access.configuration.title')}</title>
        <meta name="admin.active.section" content="admin_applications_section/admin_applications_general_section/application_access_browser"/>
        <meta name="admin.active.tab" content="application_access_browser"/>
    </head>
    <body>
        {call JIRA.Templates.Headers.pageHeader}
            {param mainContent}<h2>{getText('application.access.configuration.title')}</h2>{/param}
            {param actionsContent}{call .actions/}{/param}
        {/call}
        <div class="aui-group">
            <div class="aui-item">
                {let $globalPermissionsLink}<a href="{contextPath()}/secure/admin/GlobalPermissions!default.jspa">{/let}
                {let $linkEnd}</a>{/let}
                <p>{getText('application.access.configuration.info.1', $globalPermissionsLink, $linkEnd)|noAutoescape}</p>
                {call JIRA.Templates.Modules.staticModule}
                    {param id: 'applications-roles-container'/}
                    {param content}<div id="application-roles"></div>{/param}
                {/call}
            </div>
            {call JIRA.Templates.HelpLinks.sidebarText}
                {param helpHtml: $helpHtml /}
            {/call}
        </div>
    </body>
    </html>
{/template}